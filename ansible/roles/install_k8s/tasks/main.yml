- name: Update Packages
  apt:
    update_cache: yes

- name: Installing useful utilities
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg2
      - software-properties-common
    state: latest
    update_cache: true

- name: SWAP OFF
  shell: |
    swapoff -a

- name: Disable SWAP in fstab
  replace:
    path: /etc/fstab
    regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
    replace: '# \1'

- name: Configure modules for containerd
  blockinfile:
    path: /etc/modules-load.d/k8s.conf
    block: |
      overlay
      br_netfilter
    create: yes

- name: Load br_netfilter module
  modprobe:
    name: br_netfilter
    state: present

- name: Load overlay module
  modprobe:
    name: overlay
    state: present


- name: Configure sysctl parameters for K8S
  lineinfile:
    path: /etc/sysctl.d/k8s.conf
    line: "{{ item }}"
    create: yes
  with_items:
    - "net.bridge.bridge-nf-call-iptables  = 1"
    - "net.ipv4.ip_forward                 = 1"
    - "net.bridge.bridge-nf-call-ip6tables = 1"

- name: Set bridge-nf-call-iptables
  sysctl:
    name: net.bridge.bridge-nf-call-iptables
    value: 1

- name: Set ip_forward
  sysctl:
    name: net.ipv4.ip_forward
    value: 1

- name: Apply sysctl settings
  command: sysctl --system

- name: Export OS and CRIO_VERSION environment variables
  shell: |
    export OS=xUbuntu_22.04
    export CRIO_VERSION=1.25
  environment:
    CRIO_VERSION: "{{ CRIO_VERSION }}"
    OS: "{{ OS }}"

- name: Add the repository line to sources.list.d
  lineinfile:
    path: /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list
    line: "deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/{{ OS }}/ /"
    create: yes
  environment:
    OS: "{{ OS }}"

- name: Add the CRIO repository
  lineinfile:
    path: "/etc/apt/sources.list.d/devel:kubic:libcontainers:stable:cri-o:{{ CRIO_VERSION }}.list"
    line: "deb http://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/{{ CRIO_VERSION }}/{{ OS }}/ /"
    create: yes
  environment:
    CRIO_VERSION: "{{ CRIO_VERSION }}"
    OS: "{{ OS }}"

- name: Add GPG key for CRIO repository
  shell: |
    curl -L https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable:cri-o:{{ CRIO_VERSION }}/{{ OS }}/Release.key | apt-key add -
  environment:
    CRIO_VERSION: "{{ CRIO_VERSION }}"
    OS: "{{ OS }}"


- name: Add GPG key for CRIO repository
  shell: |
    curl -L https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/$OS/Release.key | apt-key add -
  environment:
    OS: "{{ OS }}"

- name: Update Packages
  apt:
    update_cache: yes

- name: Installing crio
  apt:
    name:
      - cri-o
      - cri-o-runc
      - cri-tools
    state: latest
    update_cache: true

- name: Start CRIO service
  systemd:
    name: crio
    state: started
    enabled: yes


- name: Download Kubernetes GPG key
  get_url:
    url: "https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key"
    dest: /tmp/k8s-Release.key

- name: Convert the GPG key to apt keyring format
  command: "gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg /tmp/k8s-Release.key"

- name: Remove the temporary GPG key file
  file:
    path: /tmp/k8s-Release.key
    state: absent

- name: Add Kubernetes repository line to sources.list.d
  lineinfile:
    path: /etc/apt/sources.list.d/kubernetes.list
    line: 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /'
    mode: '0644'
    create: yes 

- name: Update Packages
  apt:
    update_cache: yes


- name: Installing kubelet, kubeadm, kubectl
  apt:
    name:
      - kubelet
      - kubeadm
      - kubectl
    state: present
    update_cache: true

- name: Hold kubelet, kubeadm, kubectl packages
  command:
    cmd: apt-mark hold kubelet kubeadm kubectl

- name: Write DNS in /etc/resolv.conf
  lineinfile:
    path: /etc/resolv.conf
    line: "nameserver {{ item }}"
    state: present
  with_items:
    - "8.8.8.8"
    - "8.8.4.4"